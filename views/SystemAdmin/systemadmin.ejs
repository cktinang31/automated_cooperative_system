<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin | <%=title %></title>
    <link rel="stylesheet" href="/css/systemadmin.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-WZ1L1A94+IaQtJAsrsi6o8Zs/j6izKTdOPcQ//DyTK0EC6sm8ZguCCX6XNhW1hHc8r8h5mOwI8eOyjF0zJo8Xw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body>
    <header>
        <div class="site-title">
            <img src="/images/coopslogo.png" alt="">
        </div>
    
        <div class="title">
            <p><%=title%></p>
        </div>
    
        <div class="users-info">
            <div class="profile">
                <i class="fas fa-user-circle"></i>
            </div>
            <div class="logout-link">
                <p><a href="/">Logout</a></p>
            </div>
        </div>
    </header>

    <div class="container">
        <div class="container">
            <h2>Users
                <span class="add-user-btn">
                    <i class="fas fa-user-plus"></i>
                    <span class="tooltip">Add New User</span>
                </span>
            </h2>
        </div>
        

        <!-- Modal for Add User -->
    <div id="addUserModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <form action="/add_user" method="POST">
                <h3>Add New User</h3>
                <input type="text" id="fname" name="fname" placeholder="First Name" required />
                <input type="text" id="lname" name="lname" placeholder="Last Name" required />
                <input type="email" id="email" name="email" placeholder="Email" required />
                <input type="text" id="role" name="role" placeholder="Role" required />
                <button type="submit">Submit</button>
            </form>
        </div>
    </div>
    
    <tr class="user-row">
        <form action="/delete_user" method="POST" class="delete-user-form">
            <input type="hidden" name="_method" value="DELETE">
            <input type="hidden" name="user_id" value="<%= user.user_id %>">
        </form>
        
        <form action="/edit_user/<%= user.user_id %>" method="POST" class="edit-user-form">
            <input type="hidden" name="_method" value="POST">
            <input type="hidden" name="user_id" value="<%= user.user_id %>">
            
            <table class="announcement-table">
                <thead>
                    <tr>
                        <th>User ID</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Action</th>
                    </tr>
                </thead>
                    <tbody>
                        <% if (users.length > 0) { %>
                            <% users.forEach(user => { %>
                                <tr class="user-row" data-user-id="<%= user.user_id %>">
                                    <td class="title"><%= user.user_id %></td>
                                    <td class="content">
                                        <span class="fname-text"><%= user.fname %></span>
                                        <input type="text" class="fname-input" value="<%= user.fname %>" style="display:none;">
                                    </td>
                                    <td class="content">
                                        <span class="lname-text"><%= user.lname %></span>
                                        <input type="text" class="lname-input" value="<%= user.lname %>" style="display:none;">
                                    </td>
                                    <td class="content">
                                        <span class="email-text"><%= user.email %></span>
                                        <input type="email" class="email-input" value="<%= user.email %>" style="display:none;">
                                    </td>
                                    <td class="content">
                                        <span class="role-text"><%= user.role %></span>
                                        <select name="role" class="role-dropdown" style="display:none;">
                                            <option value="admin" <%= user.role === 'admin' ? 'selected' : '' %>>Admin</option>
                                            <option value="regular" <%= user.role === 'regular' ? 'selected' : '' %>>Regular</option>
                                            <option value="manager" <%= user.role === 'manager' ? 'selected' : '' %>>Manager</option>
                                            <option value="teller" <%= user.role === 'teller' ? 'selected' : '' %>>Teller</option>
                                            <option value="collector" <%= user.role === 'collector' ? 'selected' : '' %>>Collector</option>
                                            <option value="director" <%= user.role === 'director' ? 'selected' : '' %>>Director</option>
                                        </select>
                                    </td>
                                    <td class="content"> 
                                        <button type="button" class="edit-btn">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button type="button" class="delete-btn" data-user-id="<%= user.user_id %>">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                        <button type="button" class="save-btn" style="display:none;" data-user-id="<%= user.user_id %>">
                                            <i class="fas fa-save"></i>
                                        </button>
                                    </td>
                                </tr>
                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="6">There are no users to display...</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </form>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        const addUserBtn = document.querySelector('.add-user-btn');
        const modal = document.getElementById('addUserModal');
        const closeBtn = modal.querySelector('.close');

        addUserBtn.addEventListener('click', () => {
            modal.style.display = 'block';
        });

        closeBtn.addEventListener('click', () => {
            modal.style.display = 'none';
        });

        window.addEventListener('click', (event) => {
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        });

        document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', async (event) => {
        const userId = event.target.closest('.delete-btn').dataset.userId;
        if (confirm('Are you sure you want to delete this user?')) {
            try {
                const response = await fetch(`/delete_user/${userId}`, {
                    method: 'DELETE'
                });
                if (response.ok) {
                    event.target.closest('.user-row').remove();
                } else {
                    const errorMessage = await response.text();
                    alert(errorMessage);
                }
            } catch (error) {
                console.error('Error deleting user:', error);
                alert('Error deleting user.');
                }
                }
                });
                });

        document.addEventListener('DOMContentLoaded', () => {
        const toggleVisibility = (elements, displayStyle) => {
        elements.forEach(el => {
        el.style.display = displayStyle;
        });
        };
        });

        function toggleVisibility(elements, displayStyle) {
        elements.forEach(element => {
        element.style.display = displayStyle;
    });
    }

    document.querySelectorAll('.edit-btn').forEach(button => {
        button.addEventListener('click', function() {
            const row = button.closest('.user-row');
            toggleVisibility(row.querySelectorAll('.fname-text, .lname-text, .email-text, .role-text, .edit-btn'), 'none');
            toggleVisibility(row.querySelectorAll('.fname-input, .lname-input, .email-input, .role-dropdown, .save-btn'), 'inline');
        });
    });

    document.querySelectorAll('.save-btn').forEach(button => {
        button.addEventListener('click', async function(event) {
            event.preventDefault(); // Prevent the default form submission
            const row = button.closest('.user-row');
            const userId = row.dataset.userId;

            const formData = new FormData();
            formData.set('user_id', userId);
            formData.set('fname', row.querySelector('.fname-input').value);
            formData.set('lname', row.querySelector('.lname-input').value);
            formData.set('email', row.querySelector('.email-input').value);
            formData.set('role', row.querySelector('.role-dropdown').value);

            const jsonData = Object.fromEntries(formData.entries());
            console.log('Sending data:', jsonData);

            try {
                const response = await fetch(`/edit_user/${userId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-HTTP-Method-Override': 'PUT'
                    },
                    body: JSON.stringify(jsonData)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to update user');
                }

                const data = await response.json();
                console.log('Success:', data);

                row.querySelector('.fname-text').textContent = data.fname;
                row.querySelector('.lname-text').textContent = data.lname;
                row.querySelector('.email-text').textContent = data.email;
                row.querySelector('.role-text').textContent = data.role;

                toggleVisibility(row.querySelectorAll('.fname-input, .lname-input, .email-input, .role-dropdown, .save-btn'), 'none');
                toggleVisibility(row.querySelectorAll('.fname-text, .lname-text, .email-text, .role-text, .edit-btn'), 'inline');

            } catch (error) {
                console.error('Error:', error);
                alert('Error updating user details: ' + error.message);
            }
        });
    });
    });
</script>

</body>
</html>